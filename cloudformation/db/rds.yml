Conditions:
  IsProd: !Equals ["${self:provider.stage}", "prd"]

Resources:
  # DB
  DBCluster:
    Type: AWS::RDS::DBInstance
    Properties:
      DeletionProtection: !If [IsProd, true, false]
      PubliclyAccessible: true # change depending on bastion config
      EnablePerformanceInsights: true
      Engine: Postgres
      DBName: ${self:custom.db.dbname}
      DBInstanceIdentifier: "#{AWS::StackName}"
      MasterUsername:
        !Join [
          "",
          [
            "{{resolve:secretsmanager:",
            !Ref RDSInstanceSecret,
            ":SecretString:username}}",
          ],
        ]
      MasterUserPassword:
        !Join [
          "",
          [
            "{{resolve:secretsmanager:",
            !Ref RDSInstanceSecret,
            ":SecretString:password}}",
          ],
        ]
      DBInstanceClass: ${self:custom.db.instance_class}
      AllocatedStorage: ${self:custom.db.storage}
      VPCSecurityGroups:
        - "Fn::GetAtt": DBSecurityGroup.GroupId
      DBSubnetGroupName: !Ref DBSubnetGroup

  # DB login secret
  RDSInstanceSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "RDS master admin"
      Name: ${self:custom.secrets.rds}
      GenerateSecretString:
        SecretStringTemplate: '{"username": "dbadmin"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\%:\\;'

  SecretRDSInstanceAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: RDSInstanceSecret
      TargetId:
        Ref: DBCluster
      TargetType: AWS::RDS::DBInstance
